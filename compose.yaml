version: "3.9"

services:
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - microservices-net

  resource-db:
    image: postgres:${POSTGRES_VERSION}
    container_name: resource-db
    environment:
      POSTGRES_DB: ${RESOURCE_DB}
      POSTGRES_USER: ${RESOURCE_DB_USER}
      POSTGRES_PASSWORD: ${RESOURCE_DB_PASSWORD}
    ports:
      - "${RESOURCE_DB_PORT}:5432"
    volumes:
      - ./init-scripts/resource-db:/docker-entrypoint-initdb.d
    networks:
      - microservices-net

  song-db:
    image: postgres:${POSTGRES_VERSION}
    container_name: song-db
    environment:
      POSTGRES_DB: ${SONG_DB}
      POSTGRES_USER: ${SONG_DB_USER}
      POSTGRES_PASSWORD: ${SONG_DB_PASSWORD}
    ports:
      - "${SONG_DB_PORT}:5432"
    volumes:
      - ./init-scripts/song-db:/docker-entrypoint-initdb.d
    networks:
      - microservices-net

  resource-service:
    build:
      context: ./resource-service
      dockerfile: Dockerfile
    container_name: resource-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: "${RESOURCE_DB_URL}"
      SPRING_DATASOURCE_USERNAME: "${RESOURCE_DB_USER}"
      SPRING_DATASOURCE_PASSWORD: "${RESOURCE_DB_PASSWORD}"
      SONG_SERVICE_NAME: "song-service"
      SONG_SERVICE_PORT: "8082"
      EUREKA_URI: "eureka-server"
    depends_on:
      - resource-db
      - song-service
      - eureka-server
    networks:
      - microservices-net

  song-service:
    build:
      context: ./song-service
      dockerfile: Dockerfile
    deploy:
      replicas: 2
    ports:
      - 8082-8083:8082
    environment:
      SPRING_DATASOURCE_URL: "${SONG_DB_URL}"
      SPRING_DATASOURCE_USERNAME: "${SONG_DB_USER}"
      SPRING_DATASOURCE_PASSWORD: "${SONG_DB_PASSWORD}"
      EUREKA_URI: "eureka-server"
    depends_on:
      - song-db
      - eureka-server
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge